name: Build Qt WASM and Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgl1-mesa-dev libxkbcommon-x11-0 libpulse-dev

      - name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install 3.1.50
          ./emsdk activate 3.1.50

      - name: Install Qt for WebAssembly
        run: |
          pip3 install aqtinstall
          aqt install-qt linux desktop 6.6.0 gcc_64 -m all
          aqt install-qt linux desktop 6.6.0 wasm_singlethread -m all

      - name: Build Qt WASM Application
        run: |
          source emsdk/emsdk_env.sh
          export PATH=$PWD/6.6.0/wasm_singlethread/bin:$PATH
          cd src
          qmake galtonboard.pro
          make

      - name: Prepare deployment files
        run: |
          mkdir -p deploy
          cp src/GaltonBoardSimulator.html deploy/index.html
          cp src/GaltonBoardSimulator.js deploy/
          cp src/GaltonBoardSimulator.wasm deploy/
          cp src/qtloader.js deploy/ || true
          
          # Create .nojekyll to prevent GitHub Pages from processing files
          touch deploy/.nojekyll
          
          # Create a simple README
          cat > deploy/README.md << 'EOF'
          # Galton Board Simulator (WebAssembly)
          
          This is a WebAssembly build of the Galton Board Simulator.
          
          Visit the live demo: https://ttktjmt.github.io/galtonboard-qt/
          EOF

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./deploy

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
